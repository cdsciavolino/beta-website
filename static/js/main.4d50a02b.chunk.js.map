{"version":3,"sources":["images/airbnb-logo-wide.svg","images/classifier.jpg","images/capitalone-logo.svg","images/drsciavolinoday.jpg","images/facebook-logo.svg","assets/Open_QA_Survey.pdf","images/openqa-survey-paper.jpg","images/redroute-icon.png","assets/RL_Training_Survey.pdf","images/rl-survey-paper.jpg","images/sciavotech.jpg","images/spoofify.png","images/stratego-gameplay.jpg","images/cornell-sun-app-icon.png","images/yelp-logo.svg","images/prof_pic.jpg","images/linkedin.svg","images/github.svg","images/resume.svg","images/email.svg","components/common/Typography.js","data/eventDescriptions.js","data/timelineData.js","components/Filter.js","components/NoFilterResults.js","components/common/TimelineCard.js","components/common/Image.js","components/PaperReleaseCard.js","components/ProjectCard.js","components/SemesterOverviewCard.js","components/WebsiteLaunchCard.js","components/WorkExperienceCard.js","components/TimelineCards.js","components/Sphere.js","components/WelcomeBanner.js","components/OverviewSection.js","components/Footer.js","App.js","serviceWorker.js","index.js","images/cornell-logo.svg","assets/ChrisSciavolinoResume.pdf","images/princeton-logo.svg"],"names":["module","exports","EyebrowText","children","props","className","TimelineCardTitle","DescriptionText","CTAButton","SectionTitle","SectionBody","Descriptions","AIRBNB","CAPITAL_ONE","CORNELL_SUN_APP","CORNELL_TEACHING","FACEBOOK","OPEN_QA_SURVEY","REDROUTE","RL_SURVEY","SPOOFIFY","STRATEGO","SUN_ARTICLE_CLASSIFICATION","YELP","Courses","SPRING_2021_COURSES","FALL_2020_COURSES","SPRING_2020_COURSES","FALL_2019_COURSES","FALL_2018_COURSES","SPRING_2018_COURSES","FALL_2017_COURSES","SPRING_2017_COURSES","FALL_2016_COURSES","Seasons","SeasonMeta","name","priority","Tags","COURSES","CLIENT_FACING","DISTRIBUTED_SYSTEMS","INTERNSHIPS","LOVE_TALKING_ABOUT","MACHINE_LEARNING","PAPER","PROJECTS","RECENT","RESEARCH","WORKED_WITH_TEAM","containsTagFunc","tag","event","meta","tags","includes","maxPriority","Object","entries","reduce","curMax","TagFilters","type","EventTypes","COURSEWORK","WORK_EXPERIENCE","PROJECT","season","WEBSITE_LAUNCH","EventIds","allEvents","id","data","courses","schoolIcon","PrincetonIcon","schoolName","semester","taPosition","companyName","companyIcon","FacebookIcon","description","positionTitle","paperTitle","paperDescription","paperUrl","OpenQaPaperPdf","paperImg","OpenQaPaperImg","RLSurveyPaperPdf","RLSurveyPaperImg","AirbnbIcon","YelpIcon","CornellIcon","ctaLinks","projectImage","SunAppImage","projectName","projectSubtitle","CapitalOneLogo","SpoofifyIcon","ArticleClassificationImage","RedRouteIcon","websiteCompany","websiteLaunchDate","websiteUrl","websiteImage","SciavotechWebsiteImage","DrSciavolinoDayWebsiteImage","StrategoImage","excludedEventIds","events","filter","Option","Select","tagOptions","keys","map","tagKey","key","Filter","onFilterUpdate","mode","placeholder","onChange","NoFilterResults","TimelineCard","Image","alt","FlexRow","VerticallyAlignedImage","PaperReleaseCard","gutter","xs","span","order","md","href","cover","src","bordered","hoverable","ProjectCard","lg","ctaText","ctaLink","offset","SemesterOverviewCard","size","dataSource","concat","renderItem","courseName","Item","WebsiteLaunchCard","WorkExperienceCard","paragraphContent","TimelineCards","state","activeFilters","displayableEvents","displayableSeasons","Set","e","sort","a","b","bind","activeFilterFuncs","newEvents","elem","newState","this","setState","length","orientation","React","Component","Sphere","sphereClassNames","WelcomeBanner","cName","Resume","OverviewSection","ProfilePicture","target","Footer","title","LinkedInIcon","GitHubIcon","ResumeIcon","EmailIcon","App","Fragment","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d50a02b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/airbnb-logo-wide.2a1a6c94.svg\";","module.exports = __webpack_public_path__ + \"static/media/classifier.b249f223.jpg\";","module.exports = __webpack_public_path__ + \"static/media/capitalone-logo.71b61b7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/drsciavolinoday.7191d6cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-logo.3ae13bc8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Open_QA_Survey.9e8489c7.pdf\";","module.exports = __webpack_public_path__ + \"static/media/openqa-survey-paper.f4c13a09.jpg\";","module.exports = __webpack_public_path__ + \"static/media/redroute-icon.916c58f1.png\";","module.exports = __webpack_public_path__ + \"static/media/RL_Training_Survey.38be557f.pdf\";","module.exports = __webpack_public_path__ + \"static/media/rl-survey-paper.480da5bc.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sciavotech.006e0031.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spoofify.7ced8e50.png\";","module.exports = __webpack_public_path__ + \"static/media/stratego-gameplay.98f8223c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cornell-sun-app-icon.ad627b85.png\";","module.exports = __webpack_public_path__ + \"static/media/yelp-logo.9db62033.svg\";","module.exports = __webpack_public_path__ + \"static/media/prof_pic.b8e49f68.jpg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.e1613418.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.4f470645.svg\";","module.exports = __webpack_public_path__ + \"static/media/resume.b54f2ecb.svg\";","module.exports = __webpack_public_path__ + \"static/media/email.9ae28a78.svg\";","import React from 'react';\nimport { Button } from 'antd';\n\nimport './Typography.scss';\n\nexport const EyebrowText = ({ children, ...props }) => (\n    <h3 className='eyebrow-text' {...props}>{children}</h3>\n);\n\nexport const TimelineCardTitle = ({ children, ...props }) => (\n    <h3 className='timeline-card-title' {...props}>{children} </h3>\n);\n\nexport const DescriptionText = ({ children, ...props }) => (\n    <p className='description-text' {...props}>{children}</p>\n);\n\nexport const CTAButton = ({ children, ...props }) => (\n    <Button className='cta-button' {...props}>{children}</Button>\n);\n\nexport const SectionTitle = ({ children, ...props }) => (\n    <div className=\"section-title-wrapper\" {...props}>\n        <h1 className=\"section-title\">{children}</h1>\n    </div>\n);\n\nexport const SectionBody = ({ children, ...props }) => (\n    <p className='section-body' {...props}>{children}</p>\n);","export const Descriptions = {\n    AIRBNB: [\n        \"Over the summer of 2019, I interned on the Trip Platform, Search Intelligence team at Airbnb in San Francisco. During my time there I worked on developing a service using Java and Airflow aimed at serving datasets in-memory or off-heap to internal services. By far, the most interesting part of the project was propagating dataset updates to downstream subscribing services and ensuring no loss in uptime or consistency. I leveraged another internal tool to have my project support versioning, so dataset updates can be updated or reverted quickly and easily.\"\n    ],\n    CAPITAL_ONE: [\n        'During summer 2018, I am fortunate enough to be working for Capital One as a software engineering intern. I’m currently working on a full-stack web application using React.js, Redux, Node.js, Express.js, and Python. My team is cross-functional, composed of designers, product managers, and engineers one the same team. We practice Agile development practices, mixing a combination of scrum and kanban boards. Some of the interesting aspects of my internship are developing new features that span across the entire tech stack and constantly iterating on the implementation until it’s scalable and understandable.'\n    ],\n    CORNELL_SUN_APP: [\n        \"The spring of my sophomore year, a group of developers and designers had a vision to make Cornell’s newspaper, the Cornell Daily Sun, available on an iOS app. On this project, I’ve taken a much more active role in the backend Wordpress development for the app. I develop a RESTful API in PHP that the iOS mobile application can request information from like articles, categories, and other Cornell Sun data. More of my responsibilities include developing high-level specifications, guiding general codebase architecture, on-boarding new Wordpress developers, and presenting our product to the editors of the Cornell Daily Sun.\"\n    ],\n    CORNELL_TEACHING: [\n        'Ever since spring of 2017, I’ve served on course staff for the Computing and Information Science Department at Cornell University. I love sparking interest in the field and teaching peers the ins and outs of computer science, as prior teaching assistants and professors have done for me.'\n    ],\n    FACEBOOK: [\n        \"I was very fortunate to intern remotely with Facebook during the summer of 2020. I joined the Search Community Quality & Explore team and worked on iterating a recommendation model within search. I started by building a DAG-based data pipeline to generate the desired features using Presto and SparkSQL. Once I had the features, I trained, tested, and evaluated the new recommendation model offline to validate its performance. After I found a model configuration that performed well, I made changes to the production inference layer and ran an experiment online to verify its efficacy. I spent a lot of time playing with data, building PyTorch models, and collaborating with others.\"\n    ],\n    OPEN_QA_SURVEY: [\n        \"A survey of recent open-domain question answering (OpenQA) models as well as a breakdown of different directions the field has explored to solve the problem.\"\n    ],\n    REDROUTE: [\n        \"Over the summer of 2017, I worked with a development team on a call taking service for taxi dispatchers. The goal is to replace human call taking with an interactive voice response (IVR) system capable of understanding customer speech and converting calls into actionable requests dispatchers can satisfy. Two of the largest strides the company made during the summer was improved UX design (keeping interactions succinct) and accuracy (processing correct locations).\"\n    ],\n    RL_SURVEY: [\n        \"A survey of distributed training techniques and applications in reinforcement learning, including Asynchronous Advantage Actor Critic (A3C), Importance Weighted Actor-Learner Architecture, AlphaZero, and AlphaStar.\"\n    ],\n    SPOOFIFY: [\n        'As our final project in my Cloud Computing class, I collaborated with another student to create a scalable music streaming and recommendation service. Although the primary focus of the project was scalability, we also created a machine learning model to produce music recommendations for each individual user. We leveraged Spotify’s developers API to allows the user to actively stream music and generate feature vectors for each song. The application uses Node.js, Express.js, ml.js, and JSX and was hosted for testing purposes using Amazon Lightsail and DynamoDB.'\n    ],\n    STRATEGO: [\n        'As a final project for my functional programming class, I worked with 3 other teammates to create a Terminal-based version of the game Stratego. In a timeframe of 9 days, we fully developed the logic behind the game, an ASCII visualization of the board to be displayed to the user, and a x-y coordinate movement scheme for the user to move pieces. We also included a simple bot using a minimax algorithm and probabilistic modeling to pick its moves for the user to play against.'\n    ],\n    SUN_ARTICLE_CLASSIFICATION: [\n        'The fall of my junior year, I paired with a fellow developer to create a mobile application that classified articles by their expected target audience. Leveraging the immense amount of data the Cornell Daily Sun stores about its articles, we were able to create a Naïve Bayes classifier that took in the words of an article and predicted the article’s most likely readership. We split the age groups into 3 buckets: 18-24, 25-44, and 45+. Using a bag-of-words feature vector for each article, we were able to achieve approximately 76% accuracy on our training data of 800 articles, split 70% training and 30% testing. To learn more about our project, read our technical report, or go through our slide deck, see the GitHub repository linked below.'\n    ],\n    YELP: [\n        \"The spring of 2019, I spent 4 months working for the Yelp Connect team at Yelp's office in San Francisco. Over the first three months, I integrated into the product team and worked on implementing features needed before the product launch in March. I worked to implement the customer-facing marketing page and include initial Google Analytics tracking. I then collaborated with a full-time engineer to technically scope out, break down, and implement an end-to-end UI feature in React over two weeks.\",\n        \"After launching smoothly, I was tasked with creating a technical specification for a real-time data pipeline for collecting and processing clickstream data. I communicated across teams, analyzed tradeoffs of different implementations, and delivered a 16 page technical report detailing my conclusions. Rather than leaving a 16 page paper that would never be read, I summarized my project into a simple, digestable slide deck which I presented at my last team meeting.\"\n    ],\n};\n\nexport const Courses = {\n    SPRING_2021_COURSES: [\n        'COS 432: Information Security',\n        'Research in Natural Language Processing (Open-domain Question Answering)',\n    ],\n    FALL_2020_COURSES: [\n        'Full-time Research in Natural Language Processing (Open-domain Question Answering)',\n    ],\n    SPRING_2020_COURSES: [\n        'COS 598C: Deep Learning for Natural Language Processing',\n        'COS 598D: Systems and Machine Learning',\n    ],\n    FALL_2019_COURSES: [\n        'COS 418: Distributed Systems',\n        'COS 484: Natural Language Processing',\n        'COS 597B: Theoretical Deep Learning',\n    ],\n    FALL_2018_COURSES: [\n        'AEM 4550: Economics of Advertising',\n        'AEM 4660: Computer Simulation & Modeling',\n        'AEM 4670: Investments',\n        'CS 4320: Introduction to Databases',\n        'ENGRC 3350: Communication for Engineering Managers',\n        'HADM 3200: Personal Financial Management',\n    ],\n    SPRING_2018_COURSES: [\n        'CS 5412: Cloud Computing',\n        'CS 4670: Introduction to Computer Vision',\n        'INFO 3300: Data-Driven Documents',\n        'CS 4780: Machine Learning for Intelligent Systems',\n        'AEM 2241: Finance',\n        'BIONB 2220: Introduction to Neuroscience (Pass/Fail)',\n    ],\n    FALL_2017_COURSES: [\n        'BTRY 3080: Probability Inference & Models',\n        'CS 4410: Operating Systems',\n        'CS 4700: Foundations of Artificial Intelligence',\n        'CS 4701: Practicum in Artificial Intelligence',\n        'ENGRI 1101: Introduction to Operations Research',\n    ],\n    SPRING_2017_COURSES: [\n        'AEM 1200: Introduction to Business Management',\n        'CS 2300: Intermediate Design and Programming for the Web',\n        'CS 3410: Systems Programming',\n        'CS 4820: Introduction to Analysis of Algorithms',\n        'HADM 2230: Financial Accounting Principles',\n    ],\n    FALL_2016_COURSES: [\n        'BIOG 1440: Introduction to Comparative Physiology',\n        'CS 1300: Introduction to Design and Programming for the Web',\n        'CS 3110: Data Structures and Functional Programming',\n        'ENGRD 2700: Basic Engineering Probability and Statistics',\n        'PHYS 2213: Physics II, Electromagnetism',\n    ],\n};","import { Descriptions, Courses } from './eventDescriptions';\n\nimport AirbnbIcon from '../images/airbnb-logo-wide.svg';\nimport ArticleClassificationImage from '../images/classifier.jpg';\nimport CapitalOneLogo from '../images/capitalone-logo.svg';\nimport CornellIcon from '../images/cornell-logo.svg';\nimport DrSciavolinoDayWebsiteImage from '../images/drsciavolinoday.jpg';\nimport FacebookIcon from '../images/facebook-logo.svg';\nimport OpenQaPaperPdf from '../assets/Open_QA_Survey.pdf';\nimport OpenQaPaperImg from '../images/openqa-survey-paper.jpg';\nimport PrincetonIcon from '../images/princeton-logo.svg';\nimport RedRouteIcon from '../images/redroute-icon.png';\nimport RLSurveyPaperPdf from '../assets/RL_Training_Survey.pdf';\nimport RLSurveyPaperImg from '../images/rl-survey-paper.jpg';\nimport SciavotechWebsiteImage from '../images/sciavotech.jpg';\nimport SpoofifyIcon from '../images/spoofify.png';\nimport StrategoImage from '../images/stratego-gameplay.jpg';\nimport SunAppImage from '../images/cornell-sun-app-icon.png';\nimport YelpIcon from '../images/yelp-logo.svg';\n\nexport const Seasons = {\n    SPRING_2021: 'Spring 2021',\n    FALL_2020: 'Fall 2020',\n    SUMMER_2020: 'Summer 2020',\n    SPRING_2020: 'Spring 2020',\n    FALL_2019: 'Fall 2019',\n    SUMMER_2019: 'Summer 2019',\n    SPRING_2019: 'Spring 2019',\n    FALL_2018:  'Fall 2018',\n    SUMMER_2018: 'Summer 2018',\n    SPRING_2018: 'Spring 2018',\n    FALL_2017: 'Fall 2017',\n    SUMMER_2017: 'Summer 2017',\n    SPRING_2017: 'Spring 2017',\n    FALL_2016: 'Fall 2016',\n};\n\nexport const SeasonMeta = {\n    [Seasons.SPRING_2021]: {\n        name: 'Spring 2021',\n        priority: 14,\n    },\n    [Seasons.FALL_2020]: {\n        name: 'Fall 2020',\n        priority: 13,\n    },\n    [Seasons.SUMMER_2020]: {\n        name: 'Summer 2020',\n        priority: 12,\n    },\n    [Seasons.SPRING_2020]: {\n        name: 'Spring 2020',\n        priority: 11,\n    },\n    [Seasons.FALL_2019]: {\n        name: 'Fall 2019',\n        priority: 10,\n    },\n    [Seasons.SUMMER_2019]: {\n        name: 'Summer 2019',\n        priority: 9,\n    },\n    [Seasons.SPRING_2019]: {\n        name: 'Spring 2019',\n        priority: 8,\n    },\n    [Seasons.FALL_2018]: {\n        name: 'Fall 2018',\n        priority: 7,\n    },\n    [Seasons.SUMMER_2018]: {\n        name: 'Summer 2018',\n        priority: 6,\n    },\n    [Seasons.SPRING_2018]: {\n        name: 'Spring 2018',\n        priority:5,\n    },\n    [Seasons.FALL_2017]: {\n        name: 'Fall 2017',\n        priority: 4,\n    },\n    [Seasons.SUMMER_2017]: {\n        name: 'Summer 2017',\n        priority: 3,\n    },\n    [Seasons.SPRING_2017]: {\n        name: 'Spring 2017',\n        priority: 2,\n    },\n    [Seasons.FALL_2016]: {\n        name: 'Fall 2016',\n        priority: 1,\n    },\n};\n\nexport const Tags = {\n    COURSES: 'Courses',\n    CLIENT_FACING: 'Client-facing Work',\n    DISTRIBUTED_SYSTEMS: 'Distributed Systems',\n    INTERNSHIPS: 'Internships',\n    LOVE_TALKING_ABOUT: 'Love Talking About',\n    MACHINE_LEARNING: 'Machine Learning',\n    PAPER: 'Papers',\n    PROJECTS: 'Projects',\n    RECENT: 'Recent',\n    RESEARCH: 'Research',\n    WORKED_WITH_TEAM: 'Worked with a Team',\n};\n\nconst containsTagFunc = tag => event => event.meta.tags.includes(tag);\nconst maxPriority = Object.entries(SeasonMeta).reduce(\n  (curMax, [_, { priority }]) => priority > curMax ? priority : curMax\n)[1].priority;\nconst NUM_SEASONS = 6;\n\nexport const TagFilters = {\n    [Tags.COURSES]: event => event.meta.type === EventTypes.COURSEWORK,\n    [Tags.CLIENT_FACING]: containsTagFunc(Tags.CLIENT_FACING),\n    [Tags.DISTRIBUTED_SYSTEMS]: containsTagFunc(Tags.DISTRIBUTED_SYSTEMS),\n    [Tags.INTERNSHIPS]: event => event.meta.type === EventTypes.WORK_EXPERIENCE,\n    [Tags.LOVE_TALKING_ABOUT]: containsTagFunc(Tags.LOVE_TALKING_ABOUT),\n    [Tags.MACHINE_LEARNING]: containsTagFunc(Tags.MACHINE_LEARNING),\n    [Tags.PAPER]: event => event.meta.type === EventTypes.PAPER,\n    [Tags.PROJECTS]: event => event.meta.type === EventTypes.PROJECT,\n    [Tags.RECENT]: event => maxPriority - SeasonMeta[event.meta.season].priority < NUM_SEASONS,\n    [Tags.RESEARCH]: event => containsTagFunc(Tags.RESEARCH),\n    [Tags.WORKED_WITH_TEAM]: containsTagFunc(Tags.WORKED_WITH_TEAM),\n};\n\nexport const EventTypes = {\n    COURSEWORK: 'Coursework',\n    PAPER: 'Paper',\n    PROJECT: 'Project',\n    WEBSITE_LAUNCH: 'Website Launch',\n    WORK_EXPERIENCE: 'Work Experience',\n};\n\nexport const EventIds = {\n    SP21_COURSES: 'sp21_courses',\n    FA20_COURSES: 'fa20_courses',\n    FACEBOOK: 'facebook',\n    OPEN_QA_SURVEY: 'open-qa-survey',\n    RL_SURVEY: 'rl_survey',\n    SP20_COURSES: 'sp20_courses',\n    FA19_COURSES: 'fa19_courses',\n    AIRBNB: 'airbnb',\n    YELP: 'yelp',\n    FA18_COURSES: 'fa18_courses',\n    SUN_APP: 'sun_app',\n    CORNELL_TEACHING: 'cornell_teaching',\n    CAPITAL_ONE: 'capital_one',\n    SPOOFIFY: 'spoofify',\n    SP18_COURSES: 'sp18_courses',\n    FA17_COURSES: 'fa17_courses',\n    ARTICLE_CLASSIFIER: 'article_classifier',\n    REDROUTE: 'redroute',\n    SCIAVOTECH_LAUNCH: 'sciavotech_launch',\n    SP17_COURSES: 'sp17_courses',\n    DRSCIAVOLINODAY_LAUNCH: 'drsciavolinoday_launch',\n    FA16_COURSES: 'fa16_courses',\n    STRATEGO: 'stratego',\n};\n\nconst allEvents = [\n    {\n        meta: {\n            id: EventIds.SP21_COURSES,\n            season: Seasons.SPRING_2021,\n            tags: [Tags.MACHINE_LEARNING, Tags.COURSES, Tags.RESEARCH],\n            type: EventTypes.COURSEWORK,\n        },\n        data: {\n            courses: Courses.SPRING_2021_COURSES,\n            schoolIcon: PrincetonIcon,\n            schoolName: 'Princeton University',\n            semester: Seasons.SPRING_2021,\n            taPosition: ['COS 484/584: (Advanced) Natural Language Processing'],\n        }\n    },\n    {\n        meta: {\n            id: EventIds.FA20_COURSES,\n            season: Seasons.FALL_2020,\n            tags: [Tags.MACHINE_LEARNING, Tags.COURSES, Tags.RESEARCH],\n            type: EventTypes.COURSEWORK\n        },\n        data: {\n            courses: Courses.FALL_2020_COURSES,\n            schoolIcon: PrincetonIcon,\n            schoolName: 'Princeton University',\n            semester: Seasons.FALL_2020,\n            taPosition: ['COS 226: Data Structures and Algorithms'],\n        }\n    },\n    {\n        meta: {\n            id: EventIds.FACEBOOK,\n            season: Seasons.SUMMER_2020,\n            tags: [Tags.MACHINE_LEARNING, Tags.INTERNSHIPS, Tags.WORKED_WITH_TEAM],\n            type: EventTypes.WORK_EXPERIENCE,\n        },\n        data: {\n            companyName: 'Facebook Inc.',\n            companyIcon: FacebookIcon,\n            description: Descriptions.FACEBOOK,\n            positionTitle: 'Software Engineering Intern'\n        }\n    },\n    {\n        meta: {\n            id: EventIds.OPEN_QA_SURVEY,\n            season: Seasons.SPRING_2020,\n            tags: [Tags.MACHINE_LEARNING, Tags.COURSES, Tags.LOVE_TALKING_ABOUT],\n            type: EventTypes.PAPER\n        },\n        data: {\n            paperTitle: \"Q: What's Open-Domain Question Answering? A:\",\n            paperDescription: Descriptions.OPEN_QA_SURVEY,\n            paperUrl: OpenQaPaperPdf,\n            paperImg: OpenQaPaperImg\n        }\n    },\n    {\n        meta: {\n            id: EventIds.RL_SURVEY,\n            season: Seasons.SPRING_2020,\n            tags: [Tags.MACHINE_LEARNING, Tags.COURSES],\n            type: EventTypes.PAPER\n        },\n        data: {\n            paperTitle: 'Distributed Training for Reinforcement Learning',\n            paperDescription: Descriptions.RL_SURVEY,\n            paperUrl: RLSurveyPaperPdf,\n            paperImg: RLSurveyPaperImg,\n        }\n    },\n    {\n        meta: {\n            id: EventIds.SP20_COURSES,\n            season: Seasons.SPRING_2020,\n            tags: [Tags.MACHINE_LEARNING, Tags.DISTRIBUTED_SYSTEMS, Tags.COURSES],\n            type: EventTypes.COURSEWORK\n        },\n        data: {\n            courses: Courses.SPRING_2020_COURSES,\n            schoolIcon: PrincetonIcon,\n            schoolName: 'Princeton University',\n            semester: Seasons.SPRING_2020,\n            taPosition: ['COS 226: Data Structures and Algorithms'],\n        }\n    },\n    {\n        meta: {\n            id: EventIds.FA19_COURSES,\n            season: Seasons.FALL_2019,\n            tags: [Tags.MACHINE_LEARNING, Tags.DISTRIBUTED_SYSTEMS],\n            type: EventTypes.COURSEWORK\n        },\n        data: {\n          courses: Courses.FALL_2019_COURSES,\n          schoolIcon: PrincetonIcon,\n          schoolName: 'Princeton University',\n          semester: Seasons.FALL_2019,\n          taPosition: ['COS 226: Data Structures and Algorithms'],\n        }\n    },\n    {\n        meta: {\n            id: EventIds.AIRBNB,\n            season: Seasons.SUMMER_2019,\n            tags: [Tags.LOVE_TALKING_ABOUT, Tags.WORKED_WITH_TEAM],\n            type: EventTypes.WORK_EXPERIENCE\n        },\n        data: {\n            companyName: 'Airbnb Inc.',\n            companyIcon: AirbnbIcon,\n            description: Descriptions.AIRBNB,\n            positionTitle: 'Software Engineering Intern'\n        }\n    },\n    {\n        meta: {\n            id: EventIds.YELP,\n            season: Seasons.SPRING_2019,\n            tags: [Tags.WORKED_WITH_TEAM, Tags.LOVE_TALKING_ABOUT, Tags.CLIENT_FACING],\n            type: EventTypes.WORK_EXPERIENCE\n        },\n        data: {\n            companyName: 'Yelp Inc.',\n            companyIcon: YelpIcon,\n            description: Descriptions.YELP,\n            positionTitle: 'Software Engineering Intern'\n        }\n    },\n    {\n        meta: {\n            id: EventIds.FA18_COURSES,\n            season: Seasons.FALL_2018,\n            tags: [],\n            type: EventTypes.COURSEWORK\n        },\n        data: {\n            courses: Courses.FALL_2018_COURSES,\n            schoolIcon: CornellIcon,\n            schoolName: 'Cornell University',\n            semester: Seasons.FALL_2018,\n            taPosition: ['CS 2110: Data Structures and Object-Oriented Programming'],\n        }\n    },\n    {\n        meta: {\n            id: EventIds.SUN_APP,\n            season: Seasons.FALL_2018,\n            tags: [Tags.CLIENT_FACING, Tags.WORKED_WITH_TEAM, Tags.LOVE_TALKING_ABOUT],\n            type: EventTypes.PROJECT,\n        },\n        data: {\n            ctaLinks: {\n                'View on iOS App Store': 'https://apps.apple.com/us/app/cornell-daily-sun/id1375063933',\n                'View iOS GitHub': 'https://github.com/cornell-sun/sun-ios',\n                'View Backend GitHub': 'https://github.com/cornell-sun/sun-wordpress',\n            },\n            description: Descriptions.CORNELL_SUN_APP,\n            projectImage: SunAppImage,\n            projectName: 'Cornell Daily Sun iOS App',\n            projectSubtitle: null,\n        }\n    },\n    {\n        meta: {\n            id: EventIds.CORNELL_TEACHING,\n            season: Seasons.FALL_2018,\n            tags: [Tags.LOVE_TALKING_ABOUT],\n            type: EventTypes.WORK_EXPERIENCE\n        },\n        data: {\n            companyName: 'Cornell University',\n            companyIcon: CornellIcon,\n            description: Descriptions.CORNELL_TEACHING,\n            positionTitle: 'Teaching Assistant'\n        }\n    },\n    {\n        meta: {\n            id: EventIds.CAPITAL_ONE,\n            season: Seasons.SUMMER_2018,\n            tags: [Tags.WORKED_WITH_TEAM],\n            type: EventTypes.WORK_EXPERIENCE\n        },\n        data: {\n            companyName: 'Capital One',\n            companyIcon: CapitalOneLogo,\n            description: Descriptions.CAPITAL_ONE,\n            positionTitle: 'Software Engineering Intern'\n        }\n    },\n    {\n        meta: {\n            id: EventIds.SPOOFIFY,\n            season: Seasons.SPRING_2018,\n            tags: [Tags.LOVE_TALKING_ABOUT, Tags.WORKED_WITH_TEAM, Tags.DISTRIBUTED_SYSTEMS, Tags.MACHINE_LEARNING],\n            type: EventTypes.PROJECT,\n        },\n        data: {\n            ctaLinks: {\n                'View GitHub': 'https://github.com/cdsciavolino/cs5412-music-streaming',\n            },\n            description: Descriptions.SPOOFIFY,\n            projectImage: SpoofifyIcon,\n            projectName: 'Spoofify',\n            projectSubtitle: 'Scalable Music Streaming and Recommendation Service',\n        }\n    },\n    {\n        meta: {\n            id: EventIds.SP18_COURSES,\n            season: Seasons.SPRING_2018,\n            tags: [Tags.DISTRIBUTED_SYSTEMS, Tags.MACHINE_LEARNING],\n            type: EventTypes.COURSEWORK,\n        },\n        data: {\n            courses: Courses.SPRING_2018_COURSES,\n            schoolIcon: CornellIcon,\n            schoolName: 'Cornell University',\n            semester: Seasons.SPRING_2018,\n            taPosition: 'CS 2110: Data Structures and Object-Oriented Programming',\n        }\n    },\n    {\n        meta: {\n            id: EventIds.FA17_COURSES,\n            season: Seasons.FALL_2017,\n            tags: [Tags.MACHINE_LEARNING],\n            type: EventTypes.COURSEWORK,\n        },\n        data: {\n            courses: Courses.FALL_2017_COURSES,\n            schoolIcon: CornellIcon,\n            schoolName: 'Cornell University',\n            semester: Seasons.FALL_2017,\n            taPosition: [\n                'CS 2110: Data Structures and Object-Oriented Programming',\n                'INFO 1300: Introduction to Design and Programming for the Web',\n            ],\n        }\n    },\n    {\n        meta: {\n            id: EventIds.ARTICLE_CLASSIFIER,\n            season: Seasons.FALL_2017,\n            tags: [Tags.MACHINE_LEARNING, Tags.WORKED_WITH_TEAM],\n            type: EventTypes.PROJECT,\n        },\n        data: {\n            ctaLinks: {\n                'View GitHub': 'https://github.com/cornell-sun/sun-article-age-classifier',\n            },\n            description: Descriptions.SUN_ARTICLE_CLASSIFICATION,\n            projectImage: ArticleClassificationImage,\n            projectName: 'Cornell Sun Article Age Classification',\n            projectSubtitle: null,\n        }\n    },\n    {\n        meta: {\n            id: EventIds.REDROUTE,\n            season: Seasons.SUMMER_2017,\n            tags: [Tags.WORKED_WITH_TEAM, Tags.CLIENT_FACING],\n            type: EventTypes.WORK_EXPERIENCE\n        },\n        data: {\n            companyName: 'RedRoute Inc.',\n            companyIcon: RedRouteIcon,\n            description: Descriptions.REDROUTE,\n            positionTitle: 'Software Development Intern'\n        }\n    },\n    {\n        meta: {\n            id: EventIds.SCIAVOTECH_LAUNCH,\n            season: Seasons.SUMMER_2017,\n            tags: [Tags.CLIENT_FACING],\n            type: EventTypes.WEBSITE_LAUNCH,\n        },\n        data: {\n            websiteCompany: 'SciavoTECH Research and Consultancy Services',\n            websiteLaunchDate: 'August 2017',\n            websiteUrl: 'https://sciavotech.com',\n            websiteImage: SciavotechWebsiteImage,\n        },\n    },\n    {\n        meta: {\n            id: EventIds.SP17_COURSES,\n            season: Seasons.SPRING_2017,\n            tags: [],\n            type: EventTypes.COURSEWORK,\n        },\n        data: {\n            courses: Courses.SPRING_2017_COURSES,\n            schoolIcon: CornellIcon,\n            schoolName: 'Cornell University',\n            semester: Seasons.SPRING_2017,\n            taPosition: 'CS 2110: Data Structures and Object-Oriented Programming',\n        }\n    },\n    {\n        meta: {\n            id: EventIds.DRSCIAVOLINODAY_LAUNCH,\n            season: Seasons.SPRING_2017,\n            tags: [Tags.CLIENT_FACING],\n            type: EventTypes.WEBSITE_LAUNCH,\n        },\n        data: {\n            websiteCompany: 'Cristina Sciavolino-Day, MD, LLC',\n            websiteLaunchDate: 'January 2017',\n            websiteUrl: 'https://drsciavolinoday.com',\n            websiteImage: DrSciavolinoDayWebsiteImage,\n        },\n    },\n    {\n        meta: {\n            id: EventIds.FA16_COURSES,\n            season: Seasons.FALL_2016,\n            tags: [],\n            type: EventTypes.COURSEWORK,\n        },\n        data: {\n            courses: Courses.FALL_2016_COURSES,\n            schoolIcon: CornellIcon,\n            schoolName: 'Cornell University',\n            semester: Seasons.FALL_2016,\n            taPosition: null,\n        }\n    },\n    {\n        meta: {\n            id: EventIds.STRATEGO,\n            season: Seasons.FALL_2016,\n            tags: [Tags.WORKED_WITH_TEAM],\n            type: EventTypes.PROJECT,\n        },\n        data: {\n            ctaLinks: {\n                'View GitHub': 'https://github.com/cdsciavolino/Stratego',\n            },\n            description: Descriptions.STRATEGO,\n            projectImage: StrategoImage,\n            projectName: 'Terminal-Based Stratego',\n            projectSubtitle: null,\n        }\n    },\n];\n\nconst excludedEventIds = [\n    EventIds.CORNELL_TEACHING,\n];\n\nexport const events = allEvents.filter(({ meta }) => !excludedEventIds.includes(meta.id));\n","import React from 'react';\nimport { Select } from 'antd';\n\nimport { Tags } from \"../data/timelineData\";\n\nimport './Filter.scss';\n\nconst { Option } = Select;\n\nconst tagOptions = Object.keys(Tags).map(tagKey => <Option key={tagKey}>{Tags[tagKey]}</Option>);\n\nconst Filter = ({ onFilterUpdate }) => (\n  <Select className='filter-select' mode=\"multiple\" placeholder=\"Filter by Tags\" onChange={onFilterUpdate}>\n      {tagOptions}\n  </Select>\n);\n\nexport default Filter;","import React from 'react';\n\nimport { TimelineCardTitle, SectionBody } from \"./common/Typography\";\n\nimport './NoFilterResults.scss';\n\nconst NoFilterResults = () => (\n    <div className='no-results-wrapper'>\n        <TimelineCardTitle>No Results...</TimelineCardTitle>\n        <SectionBody>Try removing some filters above!</SectionBody>\n    </div>\n);\n\nexport default NoFilterResults;","import React from 'react';\nimport { Card } from 'antd';\n\nimport './TimelineCard.scss';\n\nconst TimelineCard = ({ children, ...props }) => (\n    <Card className='timeline-card' {...props}>{children}</Card>\n);\n\nexport default TimelineCard;","import React from 'react';\nimport { Row } from 'antd';\n\nimport './Image.scss';\n\nexport const Image = ({ alt, className, ...props }) => (\n    <img className={'image ' + className} alt={alt} {...props} />\n);\n\nexport const FlexRow = ({ children, ...props }) => (\n    <Row className='flex-row' {...props}>{children}</Row>\n);\n\nexport const VerticallyAlignedImage = ({ alt, className, ...props }) => (\n    <div className='vai-wrapper'>\n        <img className={'vai-image ' + className} alt={alt} {...props} />\n    </div>\n);\n","import React from 'react';\nimport { Card, Col, Row } from \"antd\";\nimport TimelineCard from \"./common/TimelineCard\";\nimport { DescriptionText, EyebrowText, TimelineCardTitle } from \"./common/Typography\";\nimport { Image } from \"./common/Image\";\nimport './PaperReleaseCard.scss';\n\nconst PaperReleaseCard = ({ paperTitle, paperDescription, paperUrl, paperImg }) => (\n    <TimelineCard>\n        <Row gutter={16} type='flex'>\n            <Col xs={{span: 24, order: 2}} md={{span: 8, order: 1}}>\n                <EyebrowText>Paper Written</EyebrowText>\n                <TimelineCardTitle>{paperTitle}</TimelineCardTitle>\n                <DescriptionText>\n                    {paperDescription}\n                </DescriptionText>\n            </Col>\n            <Col xs={{span: 24, order: 1}} md={{span: 16, order: 2}}>\n                <a href={paperUrl}>\n                    <Card\n                        className='paper-image'\n                        cover={\n                            <Image src={paperImg} alt={paperTitle}/>\n                        }\n                        bordered\n                        hoverable\n                    />\n                </a>\n            </Col>\n        </Row>\n    </TimelineCard>\n);\n\nexport default PaperReleaseCard;","import React from 'react';\nimport { Col } from 'antd';\n\nimport TimelineCard from './common/TimelineCard';\nimport { FlexRow, VerticallyAlignedImage } from './common/Image';\nimport { EyebrowText, TimelineCardTitle, DescriptionText, CTAButton } from './common/Typography';\n\nimport './ProjectCard.scss';\n\nconst ProjectCard = ({ projectName, projectSubtitle, description, ctaLinks, projectImage }) => (\n    <TimelineCard>\n        <FlexRow gutter={16} type='flex'>\n            <Col xs={{span: 24, order: 2}} lg={{span: 16, order: 1}}>\n                <EyebrowText>Project</EyebrowText>\n                <TimelineCardTitle>\n                    {projectName} {projectSubtitle && <span className='project-subtitle'>&bull; {projectSubtitle}</span>}\n                </TimelineCardTitle>\n                <DescriptionText>\n                    {description}\n                </DescriptionText>\n                <div className='centered'>\n                    {Object.entries(ctaLinks).map(([ ctaText, ctaLink ]) => (\n                        <CTAButton key={ctaLink} href={ctaLink}>{ctaText}</CTAButton>\n                    ))}\n                </div>\n            </Col>\n            <Col xs={{span: 8, offset: 8, order: 1}} lg={{span: 8, offset: 0, order: 2}}>\n                <VerticallyAlignedImage src={projectImage} alt={projectName + \" Image\"} />\n            </Col>\n        </FlexRow>\n    </TimelineCard>\n);\n\nexport default ProjectCard;","import React from 'react';\nimport { Col, List } from 'antd';\n\nimport TimelineCard from './common/TimelineCard';\nimport { FlexRow, VerticallyAlignedImage } from './common/Image';\nimport { EyebrowText, TimelineCardTitle } from './common/Typography';\n\nimport './SemesterOverviewCard.scss';\n\nconst SemesterOverviewCard = ({ courses, schoolName, semester, taPosition, schoolIcon }) => (\n    <TimelineCard>\n        <FlexRow gutter={16} type='flex'>\n            <Col xs={{span: 24, order: 2}} lg={{span: 16, order: 1}}>\n                <EyebrowText>Semester Coursework</EyebrowText>\n                <TimelineCardTitle>{semester} &bull; {schoolName}</TimelineCardTitle>\n                <List\n                    size=\"small\"\n                    dataSource={taPosition ? courses.concat(taPosition) : courses}\n                    renderItem={courseName => (\n                        courses.includes(courseName)\n                            ? <List.Item className='course-list-item'>{courseName}</List.Item>\n                            : <List.Item className='course-list-item'><b>Teaching Assistant: </b>{courseName}</List.Item>\n                    )}\n                />\n            </Col>\n            <Col xs={{span: 8, offset: 8, order: 1}} lg={{span: 8, offset: 0, order: 2}}>\n                <VerticallyAlignedImage src={schoolIcon} alt={schoolName + \" Logo\"} />\n            </Col>\n        </FlexRow>\n    </TimelineCard>\n);\n\nexport default SemesterOverviewCard;","import React from 'react';\nimport { Card, Row, Col } from 'antd';\n\nimport { Image } from \"./common/Image\";\nimport { EyebrowText, TimelineCardTitle, DescriptionText } from './common/Typography';\n\nimport './WebsiteLaunchCard.scss';\n\nimport TimelineCard from './common/TimelineCard';\n\nconst WebsiteLaunchCard = ({ websiteCompany, websiteLaunchDate, websiteUrl, websiteImage }) => (\n    <TimelineCard>\n        <Row gutter={16} type='flex'>\n            <Col xs={{span: 24, order: 2}} md={{span: 8, order: 1}}>\n                <EyebrowText>Website Launch</EyebrowText>\n                <TimelineCardTitle>{websiteCompany}</TimelineCardTitle>\n                <DescriptionText>\n                    Launched and maintained since {websiteLaunchDate}.\n                </DescriptionText>\n            </Col>\n            <Col xs={{span: 24, order: 1}} md={{span: 16, order: 2}}>\n                <a href={websiteUrl}>\n                    <Card\n                        className='website-image'\n                        cover={\n                              <Image src={websiteImage} alt={websiteCompany + ' Homepage'}/>\n                        }\n                        bordered\n                        hoverable\n                    />\n                </a>\n            </Col>\n        </Row>\n    </TimelineCard>\n);\n\nexport default WebsiteLaunchCard;","import React from 'react';\nimport { Col } from 'antd';\n\nimport TimelineCard from './common/TimelineCard';\nimport { FlexRow, VerticallyAlignedImage } from './common/Image';\nimport { EyebrowText, TimelineCardTitle, DescriptionText } from './common/Typography';\n\nimport './WorkExperienceCard.scss';\n\nconst WorkExperienceCard = ({ positionTitle, companyName, description, companyIcon }) => (\n    <TimelineCard>\n        <FlexRow gutter={16} type='flex'>\n            <Col xs={{span: 24, order: 2}} lg={{span: 16, order: 1}}>\n                <EyebrowText>Professional Experience</EyebrowText>\n                <TimelineCardTitle>{positionTitle} @ {companyName}</TimelineCardTitle>\n                {description.map(paragraphContent => (\n                    <DescriptionText key={paragraphContent}>{paragraphContent}</DescriptionText>\n                ))}\n            </Col>\n            <Col xs={{span: 16, offset: 4, order: 1}} lg={{span: 8, offset: 0, order: 2}}>\n                <VerticallyAlignedImage className='work-experience-image' src={companyIcon} alt={companyName + \" Logo\"} />\n            </Col>\n        </FlexRow>\n    </TimelineCard>\n);\n\nexport default WorkExperienceCard;","import React from 'react';\nimport { Divider, Timeline } from 'antd';\n\nimport { SectionTitle } from './common/Typography';\nimport { events, SeasonMeta, EventTypes, Tags, TagFilters } from '../data/timelineData';\n\nimport Filter from './Filter';\nimport NoFilterResults from './NoFilterResults';\nimport PaperReleaseCard from \"./PaperReleaseCard\";\nimport ProjectCard from './ProjectCard';\nimport SemesterOverviewCard from './SemesterOverviewCard';\nimport WebsiteLaunchCard from './WebsiteLaunchCard';\nimport WorkExperienceCard from './WorkExperienceCard';\n\nimport './TimelineCards.scss';\n\nclass TimelineCards extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeFilters: [],\n            displayableEvents: events,\n            displayableSeasons: [\n              ...new Set(events.map(e => e.meta.season))\n            ].sort((a, b) => SeasonMeta[b].priority - SeasonMeta[a].priority),\n        };\n\n        this.onFilterUpdate = this.onFilterUpdate.bind(this);\n    }\n\n    onFilterUpdate(activeFilters) {\n        const activeFilterFuncs = activeFilters.map(tagKey => TagFilters[Tags[tagKey]]);\n        const aggregateFilter = elem => {\n            for (const filter of activeFilterFuncs) {\n                if (!filter(elem)) return false;\n            }\n            return true;\n        };\n        const newEvents = events.filter(aggregateFilter);\n        const newState = {\n            activeFilters,\n            displayableEvents: newEvents,\n            displayableSeasons: [\n                ...new Set(newEvents.map(e => e.meta.season))\n            ].sort((a, b) => SeasonMeta[b].priority - SeasonMeta[a].priority)\n        };\n        this.setState({ ...newState });\n    }\n\n    render() {\n        const { displayableSeasons, displayableEvents } = this.state;\n        return (\n          <div className='timeline-cards'>\n              <SectionTitle>Timeline</SectionTitle>\n              <Filter onFilterUpdate={this.onFilterUpdate} />\n              <Timeline>\n                  {displayableSeasons.length === 0 &&\n                    <NoFilterResults />\n                  }\n                  {displayableSeasons.map(season => (\n                    <Timeline.Item key={season}>\n                        <Divider orientation='left'>{SeasonMeta[season].name}</Divider>\n                        {displayableEvents.filter(({ meta }) => meta.season === season).map(({ meta, data }) => {\n                            switch (meta.type) {\n                                case EventTypes.COURSEWORK:\n                                    return <SemesterOverviewCard key={meta.id} {...data} />;\n                                case EventTypes.PAPER:\n                                    return <PaperReleaseCard key={meta.id} {...data} />;\n                                case EventTypes.PROJECT:\n                                    return <ProjectCard key={meta.id} {...data} />;\n                                case EventTypes.WEBSITE_LAUNCH:\n                                    return <WebsiteLaunchCard key={meta.id} {...data} />;\n                                case EventTypes.WORK_EXPERIENCE:\n                                    return <WorkExperienceCard key={meta.id} {...data} />;\n                                default:\n                                    return null;\n                            }\n                        })}\n                    </Timeline.Item>\n                  ))}\n              </Timeline>\n          </div>\n        );\n    }\n};\n\nexport default TimelineCards;\n","import React from 'react';\n\nimport './Sphere.scss';\n\nconst Sphere = ({ className }) => (\n    <div className={`sphere ${className}`}></div>\n);\n\nexport default Sphere;\n","import React from 'react';\n\nimport Sphere from './Sphere';\nimport Resume from '../assets/ChrisSciavolinoResume.pdf';\n\nimport './WelcomeBanner.scss';\n\nconst sphereClassNames = ['sphere1', 'sphere2', 'sphere3', 'sphere4', 'sphere5'];\nconst WelcomeBanner = () => (\n    <section className='preloading-banner-wrapper'>\n        {sphereClassNames.map(cName => (\n            <Sphere className={cName} key={cName}/>\n        ))}\n        <div className=\"banner-title-wrapper\">\n            <h1 className=\"banner-title\">Welcome.</h1>\n            <div className='banner-buttons'>\n                <a className='ext-button' href={Resume}>Resume</a>\n                <a className='ext-button' href='mailto:cds253@cornell.edu?Subject=[Web Inquiry]'>Contact Me</a>\n            </div>\n        </div>\n    </section> \n);\n\nexport default WelcomeBanner;\n","import React from 'react';\nimport { Button, Col, Row } from 'antd';\n\nimport Resume from '../assets/ChrisSciavolinoResume.pdf';\nimport ProfilePicture from '../images/prof_pic.jpg';\nimport { Image } from './common/Image';\nimport { SectionTitle, SectionBody } from './common/Typography';\n\nimport './OverviewSection.scss';\n\nconst OverviewSection = () => (\n    <section className='overview-section'>\n        <SectionTitle>I'm Chris.</SectionTitle>\n        <Row>\n            <Col xs={{span: 12, offset: 6, order: 2}} lg={{span: 8, offset: 0, order: 1}}>\n                <Image className='profile-image' src={ProfilePicture} alt='Chris Sciavolino' />\n            </Col>\n            <Col xs={{span: 24, offset: 0, order: 1}} lg={{span: 15, offset: 1, order: 2}}>\n                <SectionBody>\n                  I am an aspiring full-stack software engineer with interests in machine learning, specifically natural language processing (NLP). I graduated from Cornell University in December 2018 with a BS in computer science and a minor in business. I'm currently a master's student in the Princeton University CS department. Over the past 6 years, I've explored numerous fields from iOS app development, interactive voice response systems for taxi dispatching, commercial banking, data pipelines, search systems, and so much more. More recently, I've spent a lot of time working in React, ES6 JavaScript, PyTorch, Python, and Java.\n                </SectionBody>\n                <SectionBody>\n                    Although I have barely dipped my toes in research, I plan on spending my second year in graduate school diving into ML research. I'm particularly interested in open-domain question answering and reinforcement learning. Additionally, my favorite part of the master's program at Princeton is its teaching component, as it meshes perfectly with my passion for education. My first two semesters, I was a preceptor for COS 226: Data Structures and Algorithms, an excellent followup to the 5 semesters of CS 2110: Data Structures and Object-Oriented Programming I TA'd while at Cornell.\n                </SectionBody>\n                <div className='centered'>\n                    <Button type='primary' size='large' href={Resume} target='_blank'>Resume</Button>\n                </div>\n            </Col>\n        </Row>\n    </section>\n);\n\nexport default OverviewSection;","import React from 'react';\nimport { Row, Col, Tooltip } from 'antd';\n\nimport Resume from '../assets/ChrisSciavolinoResume.pdf';\nimport LinkedInIcon from '../images/linkedin.svg';\nimport GitHubIcon from '../images/github.svg';\nimport ResumeIcon from '../images/resume.svg';\nimport EmailIcon from '../images/email.svg';\n\nimport './Footer.scss';\n\nconst Footer = () => (\n    <footer>\n        <Row>\n            <Col xs={{span: 22, offset: 1}} md={{span: 12, offset: 0}}>\n                <div className='footer-row'>\n                    <a className='social-icon' href='https://www.linkedin.com/in/chris-sciavolino'>\n                        <Tooltip title='LinkedIn'>\n                            <img className='social-icon-img' src={LinkedInIcon} alt='Linkedin' />\n                        </Tooltip>\n                    </a>\n                    <a className='social-icon' href='https://github.com/cdsciavolino'>\n                        <Tooltip title='GitHub'>\n                            <img className='social-icon-img' src={GitHubIcon} alt='Github' />\n                        </Tooltip>\n                    </a>\n                    <a className='social-icon' href={Resume}>\n                        <Tooltip title='Resume'>\n                            <img className='social-icon-img' src={ResumeIcon} alt='Resume' />\n                        </Tooltip>\n                    </a>\n                    <a className='social-icon' href='mailto:cds253@cornell.edu?Subject=[Web Inquiry]'>\n                        <Tooltip title='Email'>\n                            <img className='social-icon-img' src={EmailIcon} alt='Email' />\n                        </Tooltip>\n                    </a>\n                </div>\n            </Col>\n            <Col  xs={{span: 22, offset: 1}} md={{span: 12, offset: 0}}>\n                <div className='footer-row'>\n                    <p>\n                        <b>Email Address: </b>\n                        <a className='email-link' href='mailto:cds253@cornell.edu?Subject=[Web Inquiry]'>cds253@cornell.edu</a>\n                    </p>\n                </div>\n            </Col>\n        </Row>\n        <Row>\n            <Col offset={2} span={20}>\n                <p className='copyright'>Made with &hearts; by Chris Sciavolino</p>\n            </Col>\n        </Row>\n    </footer>\n);\n\nexport default Footer;","import React from 'react';\nimport TimelineCards from './components/TimelineCards';\nimport WelcomeBanner from './components/WelcomeBanner';\n\nimport './App.scss';\nimport OverviewSection from './components/OverviewSection';\nimport Footer from './components/Footer';\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <WelcomeBanner />\n            <OverviewSection />\n            <TimelineCards />\n            <Footer />\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';  // or 'antd/dist/antd.less'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cornell-logo.aaae88a3.svg\";","module.exports = __webpack_public_path__ + \"static/media/ChrisSciavolinoResume.7e039926.pdf\";","module.exports = __webpack_public_path__ + \"static/media/princeton-logo.1210c962.svg\";"],"sourceRoot":""}